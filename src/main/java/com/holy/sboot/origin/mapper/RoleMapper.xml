<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.holy.sboot.origin.dao.RoleDao">
  <resultMap id="BaseResultMap" type="com.holy.sboot.origin.entity.Role">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="role_code" jdbcType="VARCHAR" property="roleCode" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="role_ename" jdbcType="VARCHAR" property="roleEName" />
    <result column="data_scope" jdbcType="SMALLINT" property="dataScope" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="status" jdbcType="CHAR" property="status" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <collection property="authList" ofType="com.holy.sboot.origin.entity.Auth">
      <id property="id" column="authList.id" />
    </collection>
  </resultMap>
  <sql id="Base_Column_List">
    id, role_code, role_name, role_ename, data_scope, description, create_by, create_date, 
    update_by, update_date, status, remark
  </sql>
  
  
  <select id="getRoleList" resultMap="BaseResultMap">
      select
      <include refid="Base_Column_List" />
      from sys_role
      where id in
      <foreach item="id" collection="roleIds" open="(" close=")" separator=",">
          #{id,jdbcType=BIGINT}
      </foreach>
  </select>
  
  
  
  
  
  <select id="get" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_role
    where id = #{id,jdbcType=INTEGER}
  </select>
  <update id="delete">
    UPDATE sys_role SET
    status = #{STATUS_DELETE}
    WHERE id = #{id}
  </update>
  <insert id="insert" parameterType="com.holy.sboot.origin.entity.Role">
    insert into sys_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleCode != null">
        role_code,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="roleEName != null">
        rrole_enamel_ename,
      </if>
      <if test="dataScope != null">
        data_scope,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleCode != null">
        #{roleCode,jdbcType=VARCHAR},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleEName != null">
        #{roleEName,jdbcType=VARCHAR},
      </if>
      <if test="dataScope != null">
        #{dataScope,jdbcType=SMALLINT},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="update" parameterType="com.holy.sboot.origin.entity.Role">
    update sys_role
    <set>
      <if test="roleCode != null">
        role_code = #{roleCode,jdbcType=VARCHAR},
      </if>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleEName != null">
        role_ename = #{roleEName,jdbcType=VARCHAR},
      </if>
      <if test="dataScope != null">
        data_scope = #{dataScope,jdbcType=SMALLINT},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getByName" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sys_role r
    where
    <if test="roleName != null">
        r.role_name = #{roleName,jdbcType=TIMESTAMP}
    </if>
    <if test="roleEName != null">
        r.role_ename = #{roleEName,jdbcType=TIMESTAMP}
    </if>
    and r.status = #{STATUS_NORMAL}
  </select>
  <delete id="deleteRoleAuth">
    delete from sys_role_auth where role_id = #{id}
  </delete>
  <insert id="insertRoleAuth">
    insert into sys_role_auth(role_id, auth_id)
    <foreach collection="authList" item="auth" separator="union all">
      select #{id}, #{auth.id}
    </foreach>
  </insert>
  
</mapper>